{"ast":null,"code":"var _jsxFileName = \"/home/nilson/Dropbox/repositories/gostack/level_01/front-end-react/challenge_03/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport api from './services/api';\nimport \"./styles.css\";\n\nfunction App() {\n  const [repositories, setRepositories] = useState([]);\n  useEffect(() => {\n    api.get('/repositories').then(response => {\n      setRepositories(response.data);\n    });\n  }, []);\n\n  async function handleAddRepository() {\n    const response = await api.post('/repositories', {\n      \"title\": `Desafio REACTJS - ${Date.now()}`,\n      \"url\": \"http://github.com/...\",\n      \"techs\": [\"Node.js\", \"Vue.js\", \"Angular.js\"]\n    });\n    const repository = response.data;\n    setRepositories([...repositories, repository]);\n  }\n\n  async function handleRemoveRepository(id) {\n    await api.delete(`/repositories/${id}`);\n    /**\n     * The filter() method creates an array filled with all array elements that pass a test (provided as a function).\n     */\n\n    setRepositories(repositories.filter(repository => repository.id !== id));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    \"data-testid\": \"repository-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, repositories.map(repository => /*#__PURE__*/React.createElement(\"li\", {\n    key: repository.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 40\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"titleDetails\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, repository.title), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"infoDetails\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, repository.url), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"infoDetails\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, repository.techs), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"buttonDetails\",\n    onClick: () => handleRemoveRepository(repository.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"Remover\"))))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleAddRepository,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, \"Adicionar\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/nilson/Dropbox/repositories/gostack/level_01/front-end-react/challenge_03/src/App.js"],"names":["React","useState","useEffect","api","App","repositories","setRepositories","get","then","response","data","handleAddRepository","post","Date","now","repository","handleRemoveRepository","id","delete","filter","map","title","url","techs"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,GAAP,MAAgB,gBAAhB;AAEA,OAAO,cAAP;;AAEA,SAASC,GAAT,GAAe;AAEb,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,EAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,GAAG,CAACI,GAAJ,CAAQ,eAAR,EAAyBC,IAAzB,CAA8BC,QAAQ,IAAI;AACxCH,MAAAA,eAAe,CAACG,QAAQ,CAACC,IAAV,CAAf;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,iBAAeC,mBAAf,GAAqC;AACnC,UAAMF,QAAQ,GAAG,MAAMN,GAAG,CAACS,IAAJ,CAAS,eAAT,EAA0B;AAC/C,eAAW,qBAAoBC,IAAI,CAACC,GAAL,EAAW,EADK;AAE/C,aAAQ,uBAFuC;AAG/C,eAAU,CAAC,SAAD,EAAY,QAAZ,EAAsB,YAAtB;AAHqC,KAA1B,CAAvB;AAMA,UAAMC,UAAU,GAAGN,QAAQ,CAACC,IAA5B;AAEAJ,IAAAA,eAAe,CAAC,CAAC,GAAGD,YAAJ,EAAkBU,UAAlB,CAAD,CAAf;AACD;;AAED,iBAAeC,sBAAf,CAAsCC,EAAtC,EAA0C;AACxC,UAAMd,GAAG,CAACe,MAAJ,CAAY,iBAAgBD,EAAG,EAA/B,CAAN;AAEA;;;;AAGAX,IAAAA,eAAe,CAACD,YAAY,CAACc,MAAb,CAAoBJ,UAAU,IAAIA,UAAU,CAACE,EAAX,KAAkBA,EAApD,CAAD,CAAf;AACD;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,mBAAY,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEEZ,YAAY,CAACe,GAAb,CAAiBL,UAAU,iBAAI;AAAI,IAAA,GAAG,EAAEA,UAAU,CAACE,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAC7B;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCF,UAAU,CAACM,KAA3C,CADF,eAEE;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BN,UAAU,CAACO,GAA1C,CAFF,eAGE;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BP,UAAU,CAACQ,KAA1C,CAHF,eAKE;AAAQ,IAAA,SAAS,EAAC,eAAlB;AAAkC,IAAA,OAAO,EAAE,MAAMP,sBAAsB,CAACD,UAAU,CAACE,EAAZ,CAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALF,CAD6B,CAA/B,CAFF,CADF,eAgBE;AAAQ,IAAA,OAAO,EAAEN,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAhBF,CADF;AAoBD;;AAED,eAAeP,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport api from './services/api';\n\nimport \"./styles.css\";\n\nfunction App() {\n\n  const [repositories, setRepositories] = useState([]);\n  \n  useEffect(() => {    \n    api.get('/repositories').then(response => {      \n      setRepositories(response.data);\n    });\n  }, []);\n\n  async function handleAddRepository() {\n    const response = await api.post('/repositories', {\n      \"title\" : `Desafio REACTJS - ${Date.now()}`,\n      \"url\" : \"http://github.com/...\",\n      \"techs\" : [\"Node.js\", \"Vue.js\", \"Angular.js\"]\n    });\n\n    const repository = response.data;\n    \n    setRepositories([...repositories, repository]);\n  }\n\n  async function handleRemoveRepository(id) {\n    await api.delete(`/repositories/${id}`);\n\n    /**\n     * The filter() method creates an array filled with all array elements that pass a test (provided as a function).\n     */\n    setRepositories(repositories.filter(repository => repository.id !== id));\n  }\n\n  return (\n    <div>\n      <ul data-testid=\"repository-list\">\n      {\n        repositories.map(repository => <li key={repository.id}>          \n          <div className='list'>\n            <span className=\"titleDetails\">{repository.title}</span>\n            <span className=\"infoDetails\">{repository.url}</span>\n            <span className=\"infoDetails\">{repository.techs}</span>\n          \n            <button className=\"buttonDetails\" onClick={() => handleRemoveRepository(repository.id)}>\n              Remover\n            </button>\n          </div>                  \n        </li>)}\n      </ul>\n\n      <button onClick={handleAddRepository}>Adicionar</button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}